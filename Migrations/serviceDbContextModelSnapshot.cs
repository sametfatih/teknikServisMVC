// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using teknikServisMVC.Repositories.Context;

#nullable disable

namespace teknikServisMVC.Migrations
{
    [DbContext(typeof(serviceDbContext))]
    partial class serviceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CaddeAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Ariza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArizaDurumuId")
                        .HasColumnType("int");

                    b.Property<string>("ArizaTakipNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CihazId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArizaDurumuId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Arizalar");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.ArizaDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ArizaDurum");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Cihaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArizaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArizaId")
                        .IsUnique();

                    b.ToTable("Cihazlar");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Iletisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("Iletisimler");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Adres", b =>
                {
                    b.HasOne("teknikServisMVC.Models.Entities.Concrete.Musteri", "Musteri")
                        .WithOne("Adres")
                        .HasForeignKey("teknikServisMVC.Models.Entities.Concrete.Adres", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Ariza", b =>
                {
                    b.HasOne("teknikServisMVC.Models.Entities.Concrete.ArizaDurumu", "ArizaDurumu")
                        .WithMany()
                        .HasForeignKey("ArizaDurumuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teknikServisMVC.Models.Entities.Concrete.Musteri", "Musteri")
                        .WithMany("Arizalar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArizaDurumu");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Cihaz", b =>
                {
                    b.HasOne("teknikServisMVC.Models.Entities.Concrete.Ariza", "Ariza")
                        .WithOne("Cihaz")
                        .HasForeignKey("teknikServisMVC.Models.Entities.Concrete.Cihaz", "ArizaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ariza");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Iletisim", b =>
                {
                    b.HasOne("teknikServisMVC.Models.Entities.Concrete.Musteri", "Musteri")
                        .WithOne("Iletisim")
                        .HasForeignKey("teknikServisMVC.Models.Entities.Concrete.Iletisim", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Ariza", b =>
                {
                    b.Navigation("Cihaz");
                });

            modelBuilder.Entity("teknikServisMVC.Models.Entities.Concrete.Musteri", b =>
                {
                    b.Navigation("Adres");

                    b.Navigation("Arizalar");

                    b.Navigation("Iletisim");
                });
#pragma warning restore 612, 618
        }
    }
}
